#!/usr/bin/env ruby

require 'tempfile'

if ARGV.length != 1
  $stderr.puts "Usage: trees_distance <fasta_multiple_sequence_alignment>"
  exit
end
fasta_file_input = ARGV[0]


system('mkdir trees_distance') or raise
system("sreformat phylip #{fasta_file_input} >trees_distance/ununiqued.phylip")
Dir.chdir('trees_distance')
system('uniqify_phylip.rb <ununiqued.phylip >uniqued.phylip')

# Do the boostrapping
system('ln -s uniqued.phylip infile')
Tempfile.open('trees_distance.seqboot.params') do |tempfile|
  tempfile.puts 'R'
  tempfile.puts '1000' #1000
  tempfile.puts 'Y'
  tempfile.puts '73'
  tempfile.close #required. Maybe because it doesn't flush otherwise?
  
  system("phylip seqboot <#{tempfile.path}") or raise Exception, $?.inspect
end
system('mv outfile seqboot.outfile') or raise Exception, $?.inspect
system('rm infile') or raise Exception, $?.inspect

# create distance tree
system('ln -s seqboot.outfile infile')
Tempfile.open('trees_distance.protdist.params') do |tempfile|
  tempfile.puts 'M'
  tempfile.puts 'D'
  tempfile.puts '1000' #1000
  tempfile.puts 'Y'
  tempfile.close #required. Maybe because it doesn't flush otherwise?
  
  system("phylip protdist <#{tempfile.path}")
end
system('mv outfile protdist.outfile')
system('rm infile')

# do a bionj tree
Tempfile.open('trees_distance.bionj.params') do |tempfile|
  tempfile.puts 'protdist.outfile'
  tempfile.puts 'bionj.outfile'
  tempfile.close #required. Maybe because it doesn't flush otherwise?
  
  system("bionj <#{tempfile.path}")
end

# Make the consensus tree
system('ln -s bionj.outfile intree')
system('phylip consense <<<y')
system('mv outfile consense.outfile')
system('mv outtree consense.outtree')
system('rm intree')

#convert the names on the tree back to sensible land
Dir.chdir('..')
system("ununiqify_tree.rb #{fasta_file_input} trees_distance/uniqued.phylip trees_distance/consense.outtree >trees_distance/ununiqued.outtree")
